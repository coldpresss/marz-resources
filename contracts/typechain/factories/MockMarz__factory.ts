/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { MockMarz, MockMarzInterface } from '../MockMarz'

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'approved',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getApproved',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b506118d3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb465146101e9578063b88d4fde146101fc578063c87b56dd1461020f578063e985e9c51461022257600080fd5b80636352211e146101a557806370a08231146101b85780638129fc1c146101d957806395d89b41146101e157600080fd5b8063095ea7b3116100d3578063095ea7b3146101625780631249c58b1461017757806323b872dd1461017f57806342842e0e1461019257600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004611682565b61025e565b60405190151581526020015b60405180910390f35b61012a6102b0565b604051610119919061176c565b61014a6101453660046116bc565b610342565b6040516001600160a01b039091168152602001610119565b610175610170366004611658565b6103dc565b005b6101756104f2565b61017561018d366004611504565b61050e565b6101756101a0366004611504565b610595565b61014a6101b33660046116bc565b6105b0565b6101cb6101c63660046114b6565b61063b565b604051908152602001610119565b6101756106d5565b61012a6107ca565b6101756101f736600461161c565b6107d9565b61017561020a366004611540565b61089e565b61012a61021d3660046116bc565b61092c565b61010d6102303660046114d1565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061028f57506001600160e01b03198216635b5e139f60e01b145b806102aa57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546102bf906117ee565b80601f01602080910402602001604051908101604052809291908181526020018280546102eb906117ee565b80156103385780601f1061030d57610100808354040283529160200191610338565b820191906000526020600020905b81548152906001019060200180831161031b57829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166103c05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006103e7826105b0565b9050806001600160a01b0316836001600160a01b031614156104555760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103b7565b336001600160a01b038216148061047157506104718133610230565b6104e35760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103b7565b6104ed8383610a22565b505050565b6104fe33609754610a9d565b61050c609780546001019055565b565b6105183382610bec565b61058a5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016103b7565b6104ed838383610ce3565b6104ed8383836040518060200160405280600081525061089e565b6000818152606760205260408120546001600160a01b0316806102aa5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016103b7565b60006001600160a01b0382166106b95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016103b7565b506001600160a01b031660009081526068602052604090205490565b600054610100900460ff16806106ee575060005460ff16155b6107515760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103b7565b600054610100900460ff16158015610773576000805461ffff19166101011790555b6107b56040518060400160405280600481526020016326b0b93d60e11b81525060405180604001604052806004815260200163141313d560e21b815250610ea4565b80156107c7576000805461ff00191690555b50565b6060606680546102bf906117ee565b6001600160a01b0382163314156108325760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103b7565b336000818152606a602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6108a83383610bec565b61091a5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016103b7565b61092684848484610f72565b50505050565b6000818152606760205260409020546060906001600160a01b03166109b95760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016103b7565b60006109d060408051602081019091526000815290565b905060008151116109f05760405180602001604052806000815250610a1b565b806109fa84610ffb565b604051602001610a0b929190611701565b6040516020818303038152906040525b9392505050565b6000818152606960205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610a64826105b0565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b038216610af35760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103b7565b6000818152606760205260409020546001600160a01b031615610b585760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103b7565b6001600160a01b0382166000908152606860205260408120805460019290610b8190849061177f565b9091555050600081815260676020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000818152606760205260408120546001600160a01b0316610c655760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103b7565b6000610c70836105b0565b9050806001600160a01b0316846001600160a01b03161480610cab5750836001600160a01b0316610ca084610342565b6001600160a01b0316145b80610cdb57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610cf6826105b0565b6001600160a01b031614610d725760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e000000000000000000000000000000000000000000000060648201526084016103b7565b6001600160a01b038216610dd45760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103b7565b610ddf600082610a22565b6001600160a01b0383166000908152606860205260408120805460019290610e089084906117ab565b90915550506001600160a01b0382166000908152606860205260408120805460019290610e3690849061177f565b9091555050600081815260676020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600054610100900460ff1680610ebd575060005460ff16155b610f205760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103b7565b600054610100900460ff16158015610f42576000805461ffff19166101011790555b610f4a611111565b610f52611111565b610f5c83836111c2565b80156104ed576000805461ff0019169055505050565b610f7d848484610ce3565b610f898484848461129e565b6109265760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016103b7565b60608161101f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611049578061103381611829565b91506110429050600a83611797565b9150611023565b60008167ffffffffffffffff8111156110645761106461189a565b6040519080825280601f01601f19166020018201604052801561108e576020820181803683370190505b5090505b8415610cdb576110a36001836117ab565b91506110b0600a86611844565b6110bb90603061177f565b60f81b8183815181106110d0576110d0611884565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061110a600a86611797565b9450611092565b600054610100900460ff168061112a575060005460ff16155b61118d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103b7565b600054610100900460ff161580156107b5576000805461ffff191661010117905580156107c7576000805461ff001916905550565b600054610100900460ff16806111db575060005460ff16155b61123e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103b7565b600054610100900460ff16158015611260576000805461ffff19166101011790555b8251611273906065906020860190611401565b508151611287906066906020850190611401565b5080156104ed576000805461ff0019169055505050565b60006001600160a01b0384163b156113f657604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906112e2903390899088908890600401611730565b602060405180830381600087803b1580156112fc57600080fd5b505af192505050801561132c575060408051601f3d908101601f191682019092526113299181019061169f565b60015b6113dc573d80801561135a576040519150601f19603f3d011682016040523d82523d6000602084013e61135f565b606091505b5080516113d45760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016103b7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610cdb565b506001949350505050565b82805461140d906117ee565b90600052602060002090601f01602090048101928261142f5760008555611475565b82601f1061144857805160ff1916838001178555611475565b82800160010185558215611475579182015b8281111561147557825182559160200191906001019061145a565b50611481929150611485565b5090565b5b808211156114815760008155600101611486565b80356001600160a01b03811681146114b157600080fd5b919050565b6000602082840312156114c857600080fd5b610a1b8261149a565b600080604083850312156114e457600080fd5b6114ed8361149a565b91506114fb6020840161149a565b90509250929050565b60008060006060848603121561151957600080fd5b6115228461149a565b92506115306020850161149a565b9150604084013590509250925092565b6000806000806080858703121561155657600080fd5b61155f8561149a565b935061156d6020860161149a565b925060408501359150606085013567ffffffffffffffff8082111561159157600080fd5b818701915087601f8301126115a557600080fd5b8135818111156115b7576115b761189a565b604051601f8201601f19908116603f011681019083821181831017156115df576115df61189a565b816040528281528a60208487010111156115f857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561162f57600080fd5b6116388361149a565b91506020830135801515811461164d57600080fd5b809150509250929050565b6000806040838503121561166b57600080fd5b6116748361149a565b946020939093013593505050565b60006020828403121561169457600080fd5b8135610a1b816118b0565b6000602082840312156116b157600080fd5b8151610a1b816118b0565b6000602082840312156116ce57600080fd5b5035919050565b600081518084526116ed8160208601602086016117c2565b601f01601f19169290920160200192915050565b600083516117138184602088016117c2565b8351908301906117278183602088016117c2565b01949350505050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261176260808301846116d5565b9695505050505050565b602081526000610a1b60208301846116d5565b6000821982111561179257611792611858565b500190565b6000826117a6576117a661186e565b500490565b6000828210156117bd576117bd611858565b500390565b60005b838110156117dd5781810151838201526020016117c5565b838111156109265750506000910152565b600181811c9082168061180257607f821691505b6020821081141561182357634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561183d5761183d611858565b5060010190565b6000826118535761185361186e565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146107c757600080fdfea164736f6c6343000806000a'

export class MockMarz__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MockMarz> {
    return super.deploy(overrides || {}) as Promise<MockMarz>
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): MockMarz {
    return super.attach(address) as MockMarz
  }
  connect(signer: Signer): MockMarz__factory {
    return super.connect(signer) as MockMarz__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): MockMarzInterface {
    return new utils.Interface(_abi) as MockMarzInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): MockMarz {
    return new Contract(address, _abi, signerOrProvider) as MockMarz
  }
}
