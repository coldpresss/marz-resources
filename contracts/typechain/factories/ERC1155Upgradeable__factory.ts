/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type {
  ERC1155Upgradeable,
  ERC1155UpgradeableInterface,
} from '../ERC1155Upgradeable'

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'values',
        type: 'uint256[]',
      },
    ],
    name: 'TransferBatch',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'TransferSingle',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'value',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'URI',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'accounts',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
    ],
    name: 'balanceOfBatch',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'ids',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'id',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'uri',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b506114d3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004611034565b61018c565b6040519081526020015b60405180910390f35b6100c56100c036600461112f565b610237565b60405190151581526020016100a9565b6100e86100e3366004611170565b610289565b6040516100a991906112f3565b610108610103366004610ee9565b61031d565b005b61011d61011836600461105e565b6103bf565b6040516100a991906112b2565b610108610138366004610ff8565b6104fd565b6100c561014b366004610eb6565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b610108610187366004610f93565b6105e8565b60006001600160a01b03831661020f5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061026857506001600160e01b031982166303a24d0760e21b145b8061028357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606067805461029890611342565b80601f01602080910402602001604051908101604052809291908181526020018280546102c490611342565b80156103115780601f106102e657610100808354040283529160200191610311565b820191906000526020600020905b8154815290600101906020018083116102f457829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103395750610339853361014b565b6103ab5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060448201527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006064820152608401610206565b6103b88585858585610683565b5050505050565b606081518351146104385760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610206565b6000835167ffffffffffffffff811115610454576104546113f1565b60405190808252806020026020018201604052801561047d578160200160208202803683370190505b50905060005b84518110156104f5576104c88582815181106104a1576104a16113db565b60200260200101518583815181106104bb576104bb6113db565b602002602001015161018c565b8282815181106104da576104da6113db565b60209081029190910101526104ee816113aa565b9050610483565b509392505050565b336001600160a01b038316141561057c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610206565b3360008181526066602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6001600160a01b0385163314806106045750610604853361014b565b6106765760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f76656400000000000000000000000000000000000000000000006064820152608401610206565b6103b885858585856108f9565b81518351146106fa5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610206565b6001600160a01b03841661075e5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610206565b3360005b845181101561088b57600085828151811061077f5761077f6113db565b60200260200101519050600085838151811061079d5761079d6113db565b60209081029190910181015160008481526065835260408082206001600160a01b038e1683529093529190912054909150818110156108315760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610206565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061087090849061132a565b9250508190555050505080610884906113aa565b9050610762565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516108db9291906112c5565b60405180910390a46108f1818787878787610aa4565b505050505050565b6001600160a01b03841661095d5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610206565b3361097681878761096d88610c59565b6103b888610c59565b60008481526065602090815260408083206001600160a01b038a168452909152902054838110156109fc5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610206565b60008581526065602090815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610a3b90849061132a565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610a9b828888888888610ca4565b50505050505050565b6001600160a01b0384163b156108f15760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610ae89089908990889088908890600401611211565b602060405180830381600087803b158015610b0257600080fd5b505af1925050508015610b32575060408051601f3d908101601f19168201909252610b2f91810190611153565b60015b610be857610b3e611407565b806308c379a01415610b785750610b53611423565b80610b5e5750610b7a565b8060405162461bcd60e51b815260040161020691906112f3565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610206565b6001600160e01b0319811663bc197c8160e01b14610a9b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610206565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610c9357610c936113db565b602090810291909101015292915050565b6001600160a01b0384163b156108f15760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610ce8908990899088908890889060040161126f565b602060405180830381600087803b158015610d0257600080fd5b505af1925050508015610d32575060408051601f3d908101601f19168201909252610d2f91810190611153565b60015b610d3e57610b3e611407565b6001600160e01b0319811663f23a6e6160e01b14610a9b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610206565b80356001600160a01b0381168114610dc657600080fd5b919050565b600082601f830112610ddc57600080fd5b81356020610de982611306565b604051610df6828261137d565b8381528281019150858301600585901b87018401881015610e1657600080fd5b60005b85811015610e3557813584529284019290840190600101610e19565b5090979650505050505050565b600082601f830112610e5357600080fd5b813567ffffffffffffffff811115610e6d57610e6d6113f1565b604051610e84601f8301601f19166020018261137d565b818152846020838601011115610e9957600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215610ec957600080fd5b610ed283610daf565b9150610ee060208401610daf565b90509250929050565b600080600080600060a08688031215610f0157600080fd5b610f0a86610daf565b9450610f1860208701610daf565b9350604086013567ffffffffffffffff80821115610f3557600080fd5b610f4189838a01610dcb565b94506060880135915080821115610f5757600080fd5b610f6389838a01610dcb565b93506080880135915080821115610f7957600080fd5b50610f8688828901610e42565b9150509295509295909350565b600080600080600060a08688031215610fab57600080fd5b610fb486610daf565b9450610fc260208701610daf565b93506040860135925060608601359150608086013567ffffffffffffffff811115610fec57600080fd5b610f8688828901610e42565b6000806040838503121561100b57600080fd5b61101483610daf565b91506020830135801515811461102957600080fd5b809150509250929050565b6000806040838503121561104757600080fd5b61105083610daf565b946020939093013593505050565b6000806040838503121561107157600080fd5b823567ffffffffffffffff8082111561108957600080fd5b818501915085601f83011261109d57600080fd5b813560206110aa82611306565b6040516110b7828261137d565b8381528281019150858301600585901b870184018b10156110d757600080fd5b600096505b84871015611101576110ed81610daf565b8352600196909601959183019183016110dc565b509650508601359250508082111561111857600080fd5b5061112585828601610dcb565b9150509250929050565b60006020828403121561114157600080fd5b813561114c816114ad565b9392505050565b60006020828403121561116557600080fd5b815161114c816114ad565b60006020828403121561118257600080fd5b5035919050565b600081518084526020808501945080840160005b838110156111b95781518752958201959082019060010161119d565b509495945050505050565b6000815180845260005b818110156111ea576020818501810151868301820152016111ce565b818111156111fc576000602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a0604083015261123d60a0830186611189565b828103606084015261124f8186611189565b9050828103608084015261126381856111c4565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526112a760a08301846111c4565b979650505050505050565b60208152600061114c6020830184611189565b6040815260006112d86040830185611189565b82810360208401526112ea8185611189565b95945050505050565b60208152600061114c60208301846111c4565b600067ffffffffffffffff821115611320576113206113f1565b5060051b60200190565b6000821982111561133d5761133d6113c5565b500190565b600181811c9082168061135657607f821691505b6020821081141561137757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff811182821017156113a3576113a36113f1565b6040525050565b60006000198214156113be576113be6113c5565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d11156114205760046000803e5060005160e01c5b90565b600060443d10156114315790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561146157505050505090565b82850191508151818111156114795750505050505090565b843d87010160208285010111156114935750505050505090565b6114a26020828601018761137d565b509095945050505050565b6001600160e01b0319811681146114c357600080fd5b5056fea164736f6c6343000806000a'

export class ERC1155Upgradeable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<ERC1155Upgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC1155Upgradeable>
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): ERC1155Upgradeable {
    return super.attach(address) as ERC1155Upgradeable
  }
  connect(signer: Signer): ERC1155Upgradeable__factory {
    return super.connect(signer) as ERC1155Upgradeable__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): ERC1155UpgradeableInterface {
    return new utils.Interface(_abi) as ERC1155UpgradeableInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): ERC1155Upgradeable {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Upgradeable
  }
}
