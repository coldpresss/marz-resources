/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from 'ethers'
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from '@nomiclabs/hardhat-ethers/types'

import * as Contracts from '.'

declare module 'hardhat/types/runtime' {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: 'OwnableUpgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.OwnableUpgradeable__factory>
    getContractFactory(
      name: 'ERC1155Upgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1155Upgradeable__factory>
    getContractFactory(
      name: 'IERC1155MetadataURIUpgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC1155MetadataURIUpgradeable__factory>
    getContractFactory(
      name: 'IERC1155ReceiverUpgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC1155ReceiverUpgradeable__factory>
    getContractFactory(
      name: 'IERC1155Upgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC1155Upgradeable__factory>
    getContractFactory(
      name: 'ERC721Upgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721Upgradeable__factory>
    getContractFactory(
      name: 'IERC721EnumerableUpgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721EnumerableUpgradeable__factory>
    getContractFactory(
      name: 'IERC721MetadataUpgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721MetadataUpgradeable__factory>
    getContractFactory(
      name: 'IERC721ReceiverUpgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>
    getContractFactory(
      name: 'IERC721Upgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721Upgradeable__factory>
    getContractFactory(
      name: 'ERC165Upgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC165Upgradeable__factory>
    getContractFactory(
      name: 'IERC165Upgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC165Upgradeable__factory>
    getContractFactory(
      name: 'ERC721EnumerableUpgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721EnumerableUpgradeable__factory>
    getContractFactory(
      name: 'ERC721Upgradeable',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC721Upgradeable__factory>
    getContractFactory(
      name: 'MarzResources',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.MarzResources__factory>
    getContractFactory(
      name: 'LootNFT',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.LootNFT__factory>
    getContractFactory(
      name: 'IERC721',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721__factory>
    getContractFactory(
      name: 'Plot',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Plot__factory>
    getContractFactory(
      name: 'MockMarz',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.MockMarz__factory>

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<ethers.ContractFactory>
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer,
    ): Promise<ethers.ContractFactory>
  }
}
